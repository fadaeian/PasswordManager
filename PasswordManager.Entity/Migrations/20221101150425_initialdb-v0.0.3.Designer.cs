// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PasswordManager.Entity.Managers;

#nullable disable

namespace PasswordManager.Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221101150425_initialdb-v0.0.3")]
    partial class initialdbv003
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PasswordManager.Entity.Models.Passwords", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordId"), 1L, 1);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 1, 18, 34, 25, 259, DateTimeKind.Local).AddTicks(4758));

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PasswordId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("PasswordManager.Entity.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 1, 18, 34, 25, 259, DateTimeKind.Local).AddTicks(3488));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = -1,
                            Address = "",
                            Email = "fadaeian@Gmail.com",
                            FirstName = "Mohammad",
                            LastName = "Fadaeian",
                            Locked = false,
                            Password = "32231ebf7e0f3491886dbf837b09b9eb",
                            RegisterDate = new DateTime(2022, 11, 1, 18, 34, 25, 259, DateTimeKind.Local).AddTicks(3992),
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 1,
                            Address = "",
                            Email = "user@Gmail.com",
                            FirstName = "testuser",
                            LastName = "testuser",
                            Locked = false,
                            Password = "682e93a42e5acf606ce5d583f6cd7bf1",
                            RegisterDate = new DateTime(2022, 11, 1, 18, 34, 25, 259, DateTimeKind.Local).AddTicks(4018),
                            UserName = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
