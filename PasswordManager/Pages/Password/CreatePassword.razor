@page "/CreatePassword"
@inject IPasswordClientService PasswordClientService
@inject NavigationManager NavigationManager

@*TODO*@
@*@attribute [Authorize]*@

<h3>CreatePassword</h3>
<hr />
<div class="col-12 row" style="text-align:left; font-weight:bold">
	<span class="col-12" style="color:red">@ServiceMesssage</span>
</div>
<EditForm Model="CurrentPassword" OnValidSubmit="OnValidSubmit">
	<FluentValidationValidator />
	<ValidationSummary />
	<div class="row">
	<div class="form-group col-md-4">
		<label class="col-form-label">Name: </label>
		<div >
				<InputText class="form-control" @bind-Value="@CurrentPassword.Name"></InputText>
				<ValidationMessage For="@(()=> CurrentPassword.Name)" />
		</div>
	</div>
	<div class="form-group col-md-4">
		<label class="col-form-label">SiteURl: </label>
		<div >
				<InputText  class="form-control" @bind-Value="@CurrentPassword.SiteURL"></InputText>
				<ValidationMessage For="@(()=> CurrentPassword.SiteURL)" />
		</div>
	</div>
	</div>
		<div class="row">
		<div class="form-group col-md-4">
			<label class="col-form-label">UserName: </label>
			<div class="">
				<InputText class="form-control" @bind-Value="@CurrentPassword.UserName"></InputText>
				<ValidationMessage For="@(()=> CurrentPassword.UserName)" />
			</div>
		</div>
		<div class="form-group col-md-4">
			<label class="col-form-label">Password: </label>
			<div class="">
				<InputText class="form-control" @bind-Value="@CurrentPassword.Password"></InputText>
				<ValidationMessage For="@(()=> CurrentPassword.Password)" />
			</div>
		</div>
		</div>
	<br />
	<button class="btn btn-warning" title="Return" @onclick="(() => Return())">Return</button>
	<button type="submit" title="Save" class="btn btn-success">Save</button>
	
</EditForm>
@code {
	[Parameter]
	public string id { get; set; }
	public string ServiceMesssage { get; set; } = string.Empty;
	public CreatePasswordDTO CurrentPassword = new();


	async Task OnValidSubmit()
	{
		var result = await PasswordClientService.CreatePassword(CurrentPassword);
		if (result.Success)
		{
			NavigationManager.NavigateTo("Passwords");
		}
		else
		{
			ServiceMesssage = result.Error;
		}

	}


	private void Return()
	{
		NavigationManager.NavigateTo("Passwords");
	}
}
